# Distributed under the terms of the GNU General Public License v2
# Copyright 2005-2006 The RepoDoc Team

MODULE_NAME="Banned"

KEYWORDS="*"

# Patterns.
# In this section we define the patterns we want to use with the module.
# You can define your own patterns following the syntax:
#
# banpattern_${pattern_name}='sed-pattern-to-use'
#

# Examples:

# 1. Basic pattern
# Find an specific word and marks it (in the log) with uppercase letters.
# You can just copy it and replace "links2" by the word you like to
# be warned about.
#
# This pattern finds links2 (which is deprecated in favor of justl links)
# and marks it with uppercase letters in user log if it was found.
# Please, remember to use the sed command '=' in order to get the line numbers
# appear in the log.
banpattern_links2='/\(links2\)/{=;s//\U\1\E/gp}'

# 2. Other patterns.
# If you know a little bit about sed, you can just define whatever action
# you like to apply to the pattern found.

# This pattern finds tabs and marks them with a '#' mark
banpattern_tabs='/\t/{=;s//####/gp}'

# Find trailing whitespaces
banpattern_trailingwhitespaces='/[[:blank:]]\+$/{=;s//####/p}'

exec_module() {
	local retVal=0 fileconf="${REPO_CONF_DIR}/patterns" i=0 \
		read_pattern read_type read_lang read_id pattern ids \
		p preb posb resb

	OUTPUT_TEXT="Banned patterns found:"

	# standard pattern for banned-word:
	preb='\([^[:alpha:]]\|^\)'
	posb='\([^[:alpha:]]\|$\)'
	resb='{=;s//\1\U\2\E\3/gp}'

	# configuration file format:
	# <special|basic> <language|all> <banned-word|sed-pattern <id>>
	#
	# NOTES:
	# type: "special" for sed-pattern or "basic" for banned-word
	# language: "all" for applying independently of the language

	if [[ -r ${fileconf} ]] ; then
		while read -r read_type read_lang read_pattern read_id ; do
			case ${read_type},${read_lang} in
				basic,all|basic,${LANGUAGE})
					pattern_id[${i}]=${read_pattern}
					pattern[${i}]='/'${preb}'\('${read_pattern}'\)'${posb}'/'${resb}
					(( i++ ))
				;;
				special,all|special,${LANGUAGE})
					pattern_id[${i}]=${read_id}
					pattern[${i}]=${read_pattern}
					(( i++ ))
				;;
			esac
		done < ${fileconf}
	fi

	for p in ${!banpattern_*} ; do
		pattern_id[${i}]=${p#banpattern_}
		pattern[${i}]=${!p}
		(( i++ ))
	done

	for ((i=0 ; i < ${#pattern[@]} ; i++)) ; do
		res=$(sed -n -e ${pattern[${i}]} ${DOC} | sed -f "${LIB_DIR}/massagelinenumbers.sed")
		if [[ -n ${res} ]] ; then
			retVal=2
			OUTPUT_TEXT="${OUTPUT_TEXT}

 - Using banned pattern '${pattern_id[${i}]}' I spotted shait at:
--- 8< ---
${res}
--- 8< ---"
		fi
	done

	return ${retVal}
}
